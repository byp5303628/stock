<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ethanpark.stock.common.dal.mappers.TaskMapper">
    <resultMap id="BaseResultMap" type="com.ethanpark.stock.common.dal.mappers.entity.TaskDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="task_type" jdbcType="VARCHAR" property="taskType"/>
        <result column="context" jdbcType="VARCHAR" property="context"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="retry_times" jdbcType="INTEGER" property="retryTimes"/>
        <result column="result_msg" jdbcType="VARCHAR" property="resultMsg"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="fire_time" jdbcType="TIMESTAMP" property="fireTime"/>
    </resultMap>

    <select id="selectFireTaskIds" resultType="java.lang.Long">
        SELECT ID
        FROM task
        WHERE task_type = #{taskType}
          AND status IN ('RETRY', 'INIT')
          AND fire_time &lt; CURRENT_TIMESTAMP
        order by fire_time desc
        LIMIT #{limitNum}
    </select>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from task
        where ID = #{id}
    </select>

    <insert id="insert" parameterType="com.ethanpark.stock.common.dal.mappers.entity.TaskDO">
        insert into task (task_type, context, status, retry_times, result_msg, gmt_create, gmt_modified, fire_time)
        values (#{taskType}, #{context}, #{status}, #{retryTimes}, #{resultMsg}, #{gmtCreate}, #{gmtModified},
                #{fireTime})
    </insert>

    <update id="updateById" parameterType="com.ethanpark.stock.common.dal.mappers.entity.TaskDO">
        update task
        set context     = #{context}
          , status      = #{status}
          , retry_times = #{retryTimes}
          , result_msg  = #{resultMsg}
          , fire_time   = #{fireTime}
        where id = #{id}
    </update>

</mapper>